// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id                     Int                  @id @default(autoincrement())
  clerkId                String               @unique
  email                  String               @unique
  firstName              String
  lastName               String
  createdAt              DateTime             @default(now())
  updatedAt              DateTime             @updatedAt
  accountType            AccountType          @default(MEMBER)
  middleName             String?
  phone                  String?
  birthday               DateTime?
  separatedSubdivision   SeparatedSubdivision @relation(fields: [separatedSubdivisionId], references: [id])
  separatedSubdivisionId Int
  isMembershipActive     Boolean              @default(false)
  membershipType         MembershipType       @default(FULL)
  isExcluded             Boolean              @default(false)
  excludedReason         String?
  fullName               String?
  activityTypes          ActivityTypesUsers[]
}

model SeparatedSubdivision {
  id                    Int      @id @default(autoincrement())
  name                  String
  headName              String
  contacts              String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  isActive              Boolean  @default(true)
  acceptsOnlinePayments Boolean  @default(false)
  feeAmount             Int      @default(0)
  users                 User[]
}

model ActivityType {
  id                 Int                  @id @default(autoincrement())
  name               String
  ActivityTypesUsers ActivityTypesUsers[]
}

model ActivityTypesUsers {
  id             Int          @id @default(autoincrement())
  activityTypeId Int
  activityType   ActivityType @relation(fields: [activityTypeId], references: [id])
  userId         String
  user           User         @relation(fields: [userId], references: [clerkId])
}

enum AccountType {
  MEMBER
  SERVICE
}

enum MembershipType {
  FULL
  REDUCED
}
